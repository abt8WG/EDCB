id=0+(mg.get_var(mg.request_info.query_string, 'id') or 0)

changed=false

edcb.htmlEscape=15
for i,v in ipairs(edcb.EnumRecPresetInfo()) do
  if v.id==0 then
    rs=v.recSetting
  end
end

recMode=(rs.recMode==5 and 0 or rs.recMode)

edcb.htmlEscape=15
r=edcb.GetReserveData(id)
if r then
  rs=r.recSetting
  presetID=65535
  recMode=(rs.recMode==5 and recMode or 5)
  tuijyuuFlag=(rs.tuijyuuFlag and 1 or 0)
  priority=rs.priority
  pittariFlag=(rs.pittariFlag and 1 or 0)
  suspendMode=rs.suspendMode
  rebootFlag=(rs.rebootFlag and 1 or nil)
  useDefMarginFlag=(rs.startMargin==nil and 0 or nil)
  startMargin=(rs.startMargin or 0)
  endMargin=(rs.endMargin or 0)
  serviceMode=(rs.serviceMode%2==0 and 0 or nil)
  serviceMode_1=(rs.serviceMode%2~=0 and math.floor(rs.serviceMode/16)%2~=0 and 0 or nil)
  serviceMode_2=(rs.serviceMode%2~=0 and math.floor(rs.serviceMode/32)%2~=0 and 0 or nil)
  continueRecFlag=(rs.continueRecFlag and 1 or nil)
  tunerID=rs.tunerID
  partialRecFlag=(rs.partialRecFlag~=0 and '1' or nil)
  if presetID and
     recMode and
     priority and
     suspendMode and
     (useDefMarginFlag or startMargin and endMargin) and tunerID
  then
    rs=r.recSetting
    if 0+presetID~=0xFFFF then
      rs.batFilePath=''
      rs.recFolderList={}
      rs.partialRecFolder={}
      for i,v in ipairs(edcb.EnumRecPresetInfo()) do
        if v.id==0+presetID then
          rs.batFilePath=v.recSetting.batFilePath
          rs.recFolderList=v.recSetting.recFolderList
          rs.partialRecFolder=v.recSetting.partialRecFolder
          break
        end
      end
    end
    rs.recMode=0+recMode
    rs.tuijyuuFlag=0+(tuijyuuFlag or 0)~=0
    rs.priority=0+priority
    rs.pittariFlag=0+(pittariFlag or 0)~=0
    rs.suspendMode=0+suspendMode
    rs.rebootFlag=rebootFlag~=nil
    rs.startMargin=nil
    rs.endMargin=nil
    if not useDefMarginFlag then
      rs.startMargin=0+startMargin
      rs.endMargin=0+endMargin
    end
    rs.serviceMode=serviceMode and 0 or 1+(serviceMode_1 and 16 or 0)+(serviceMode_2 and 32 or 0)
    rs.continueRecFlag=continueRecFlag~=nil
    rs.tunerID=0+tunerID
    rs.partialRecFlag=partialRecFlag and 1 or 0
    changed=edcb.ChgReserveData(r)
  end

  r=edcb.GetReserveData(id)
  recMode=r.recSetting.recMode
  overlapMode=r.overlapMode
  start=os.time(r.startTime)-os.time()<0 and 1 or 0
end

ct='<?xml version="1.0" encoding="UTF-8" ?'..'><entry>'
  ..(changed and '<success><reserveid>'..id..'</reserveid><recmode>'..recMode..'</recmode><overlapmode>'..overlapMode..'</overlapmode><start>'..start..'</start></success></entry>' or '<err>入力値不正</err></entry>')
mg.write('HTTP/1.1 200 OK\r\nContent-Type: text/xml\r\nContent-Length: '..#ct..'\r\nConnection: close\r\n\r\n', ct)
