added=false
onid=0+(mg.get_var(mg.request_info.query_string,'onid') or 0)
tsid=0+(mg.get_var(mg.request_info.query_string,'tsid') or 0)
sid=0+(mg.get_var(mg.request_info.query_string,'sid') or 0)
eid=0+(mg.get_var(mg.request_info.query_string,'eid') or 0)

edcb.htmlEscape=15
for i,v in ipairs(edcb.EnumRecPresetInfo()) do
  if v.id==0 then
    rs=v.recSetting
  end
end
  r={recSetting={}}
  r.onid=onid
  r.tsid=tsid
  r.sid=sid
  r.eid=eid
  presetID=0
  recMode=rs.recMode
  tuijyuuFlag=(rs.tuijyuuFlag and 1 or 0)
  priority=rs.priority
  pittariFlag=(rs.pittariFlag and 1 or 0)
  suspendMode=rs.suspendMode
  rebootFlag=(rs.rebootFlag and 1 or nil)
  useDefMarginFlag=(rs.startMargin==nil and 0 or nil)
  startMargin=(rs.startMargin or 0)
  endMargin=(rs.endMargin or 0)
  serviceMode=(rs.serviceMode%2==0 and 0 or nil)
  serviceMode_1=(rs.serviceMode%2~=0 and math.floor(rs.serviceMode/16)%2~=0 and 0 or nil)
  serviceMode_2=(rs.serviceMode%2~=0 and math.floor(rs.serviceMode/32)%2~=0 and 0 or nil)
  continueRecFlag=(rs.continueRecFlag and 1 or nil)
  tunerID=rs.tunerID
  partialRecFlag=(rs.partialRecFlag~=0 and '1' or nil)
  eventInfo=edcb.SearchEpg(r.onid, r.tsid, r.sid, r.eid)
  if eventInfo and eventInfo.startTime and eventInfo.durationSecond and
     presetID and
     recMode and
     priority and
     suspendMode and
     (useDefMarginFlag or startMargin and endMargin) and tunerID
  then
    r.title=eventInfo.shortInfo and eventInfo.shortInfo.event_name or ''
    r.startTime=eventInfo.startTime
    r.startTimeEpg=eventInfo.startTime
    r.durationSecond=eventInfo.durationSecond
    r.stationName=''
    for i,v in ipairs(edcb.GetServiceList() or {}) do
      if v.onid==r.onid and v.tsid==r.tsid and v.sid==r.sid then
        r.stationName=v.service_name
        break
      end
    end
    rs=r.recSetting
    rs.batFilePath=''
    rs.recFolderList={}
    rs.partialRecFolder={}
    for i,v in ipairs(edcb.EnumRecPresetInfo()) do
      if v.id==0+presetID then
        rs.batFilePath=v.recSetting.batFilePath
        rs.recFolderList=v.recSetting.recFolderList
        rs.partialRecFolder=v.recSetting.partialRecFolder
        break
      end
    end
    rs.recMode=0+recMode
    rs.tuijyuuFlag=0+(tuijyuuFlag or 0)~=0
    rs.priority=0+priority
    rs.pittariFlag=0+(pittariFlag or 0)~=0
    rs.suspendMode=0+suspendMode
    rs.rebootFlag=rebootFlag~=nil
    if not useDefMarginFlag then
      rs.startMargin=0+startMargin
      rs.endMargin=0+endMargin
    end
    rs.serviceMode=serviceMode and 0 or 1+(serviceMode_1 and 16 or 0)+(serviceMode_2 and 32 or 0)
    rs.continueRecFlag=continueRecFlag~=nil
    rs.tunerID=0+tunerID
    rs.partialRecFlag=partialRecFlag and 1 or 0
    added=edcb.AddReserveData(r)
  end

if added then
  for i,v in ipairs(edcb.GetReserveData()) do
    if v.onid==onid and v.tsid==tsid and v.sid==sid and v.eid==eid then
      id=v.reserveID
      r=edcb.GetReserveData(id)
      break
    end
  end
  recMode=r.recSetting.recMode
  overlapMode=r.overlapMode
  state=r.recSetting.recMode==5 and 'disablerec' or r.overlapMode==1 and 'partially' or r.overlapMode==2 and 'shortage' or ''
  start=os.time(r.startTime)-os.time()<0 and 1 or 0
end


ct='<?xml version="1.0" encoding="UTF-8" ?'..'><entry>'
  ..(added and '<success><reserveid>'..id..'</reserveid><recmode>'..recMode..'</recmode><overlapmode>'..overlapMode..'</overlapmode><state>'..state..'</state><start>'..start..'</start></success></entry>' or '<err>入力値不正</err></entry>')
mg.write('HTTP/1.1 200 OK\r\nContent-Type: text/xml\r\nContent-Length: '..#ct..'\r\nConnection: close\r\n\r\n', ct)
